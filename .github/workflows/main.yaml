name: ci

on:
  push:
    branches:
      - "*"  # run for branches
    tags:
      - "*"  # run for tags
  pull_request:
    branches:
      - "*"  # run for branches
    tags:
      - "*"  # run for tags

jobs:
  test:
    defaults:
      run:
        working-directory: go/src/github.com/microservices-demo/user
    runs-on: ubuntu-latest
    env:
      GROUP: weaveworksdemos
      COMMIT: ${{ github.sha }}
      REPO: user
      GO_VERSION: 1.7.5
      GOPATH: /home/runner/work/user/user/go

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: go/src/github.com/microservices-demo/user

      - uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: |
          go get -v github.com/mattn/goveralls
          go get -v github.com/Masterminds/glide
          glide install

      - name: Install/Downgrade MongoDB to version 3.6
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-3.6.asc | sudo apt-key add -
          echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
          sudo apt-get update
          sudo apt-get install -y --allow-downgrades mongodb-org=3.6.20 mongodb-org-server=3.6.20 mongodb-org-shell=3.6.20 mongodb-org-mongos=3.6.20 mongodb-org-tools=3.6.20 || echo "Error is misleading, it was successfully installed"

      - name: Unit Tests
        run: ${GOPATH}/bin/glide novendor| xargs go test -v

      - name: Create ZIP file
        run: |
          CGO_ENABLED=0 GOOS=linux go build main.go

      - name: Create ZIP file
        run: |
          zip user.zip ./main

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 0.0.${{ github.run_number }}
          release_name: Release 0.0.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: go/src/github.com/microservices-demo/user/user.zip
          asset_name: user.zip
          asset_content_type: application/